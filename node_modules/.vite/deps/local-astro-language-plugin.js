import "./chunk-HM4MQYWN.js";

// node_modules/local-astro-language-plugin/transform-anchor.js
var createAnchorTransformer = (config) => {
  return async (anchor) => {
    var _a;
    const originalHref = (_a = anchor.getAttribute("href") || anchor.href) == null ? void 0 : _a.trim();
    if (!originalHref)
      return;
    const shoudNotChangeHref = originalHref.includes(config.protocolIdentifier) || // Link contains a protocol, only local links should be changed
    config.excludeStartWithPatterns.some(
      (pattern) => originalHref.startsWith(pattern)
    );
    if (shoudNotChangeHref)
      return;
    if (originalHref.startsWith(config.publicPrefix)) {
      anchor.setAttribute(
        "href",
        `${originalHref.substring(config.publicPrefix.length)}`
      );
      return originalHref;
    }
    const pathPrefix = config.localPathPrefixes.find(
      (prefix) => originalHref.startsWith(prefix)
    ) ?? "";
    if (pathPrefix === "")
      return;
    const hrefWithoutPrefix = originalHref.substring(pathPrefix.length);
    if (anchor.getAttribute("hreflang"))
      return;
    if (hrefWithoutPrefix.startsWith(config.language)) {
      anchor.setAttribute("hreflang", config.language);
      return;
    }
    anchor.setAttribute(
      "href",
      `${pathPrefix}${config.language}/${hrefWithoutPrefix}`
    );
    anchor.setAttribute("hreflang", config.language);
    return originalHref;
  };
};

// node_modules/local-astro-language-plugin/client.js
var transformAllAnchors = async (config) => {
  const htmlElement = document.querySelector("html");
  const anchorTransformer = createAnchorTransformer({
    language: htmlElement.lang,
    excludeStartWithPatterns: config.excludeStartWithPatterns,
    localPathPrefixes: config.localPathPrefixes,
    protocolIdentifier: config.protocolIdentifier,
    publicPrefix: config.publicPrefix
  });
  const anchorElements = Array.from(document.querySelectorAll("a"));
  const transformAnchorTasks = anchorElements.map(anchorTransformer);
  const changedAnchorsHrefs = (await Promise.all(transformAnchorTasks)).filter(
    (href) => Boolean(href)
  );
  if (config.logChanges)
    console.log(config.consoleTag, "\n Changed tags", changedAnchorsHrefs);
};
export {
  transformAllAnchors
};
//# sourceMappingURL=local-astro-language-plugin.js.map
